plugins {
    id "idea"
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


def vertxVersion = '3.7.0'
def DAGGER_VERSION = "2.22.1"
ext {
    junitJupiterEngineVersion = '5.4.0'
}

application {
    mainClassName = 'io.vertx.core.Launcher'
}

sourceCompatibility = '1.11'

def mainVerticleName = 'com.dataWorld.backend.Api.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    //Framework Dagger
    compileOnly "com.google.dagger:dagger:${DAGGER_VERSION}"
    compileOnly "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    compile "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"


    annotationProcessor "com.google.dagger:dagger:${DAGGER_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    //Vertx React-Core

    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
    implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
    implementation "io.vertx:vertx-rx-java2:$vertxVersion"
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-health-check:$vertxVersion"
    compile "io.vertx:vertx-web-client:$vertxVersion"

    compile 'io.vertx:vertx-mysql-client:3.8.5'

    implementation 'com.google.code.gson:gson:2.8.5'

    compile "io.vavr:vavr:0.9.3"
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    compile 'io.github.cdimascio:java-dotenv:5.0.1'

    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
//    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
//    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"
}

idea {
    module {
        // This allows intellij to have auto-complete and recognize
        // the source files generated in this location
        // This path is defined by the net.ltgt.apt gradle plugin
        def javaGeneratedPath = "$buildDir/generated/sources/annotationProcessor/java/main/"
        sourceDirs += file(javaGeneratedPath)
        generatedSourceDirs += file(javaGeneratedPath)
        testSourceDirs += file(javaGeneratedPath)
    }
}


shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
    archiveName = "fat.jar"
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
